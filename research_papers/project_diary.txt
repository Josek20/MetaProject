10.12.2024
1) Karel run sympy on the dataset
2) Re did the training samples extraction, works a bit faster, outputs vectors instead of matrix (hp, hn)
3) Trying to implement batched cached inference (have it working but produces incorrect results)


28.11.2024
1) To imrove performance, will add threading to build trees simultaneously


26.11.2024
1) TermInterface node_cound much faster than MyModule.exp_size
*(when tested on a single example, when tested inside a pipeline exp_size is faster) 


30.10.2024 - 04.11.2024
1) Learning RL from DeepMind 
2) Trying to reimplement the Neural Rewriter to Julia
3) Trying to parse halide rules
4) 2 queues RF and heuristic
5) Trying to improve matching (by doing execute in batches)
Done --> 6) Have updated Metatheory from v2.0.2 to v3.0.0 in MyModule package
7) Trying to reimplement loss function using SimpleChains


29.10.2024
1) write to the NR about research tree
2) study reinforcment learning
3) 2 queues RF and heuristic
4) halide rules


16.10.2024
- Trying to improve tree search 
  1) trying to use RL reward function from neural rewriter:
    h = exp(-lambad * x) / sum(exp(-lambad * i) for i in x_arr)  


10.10.2024
- Adding A* to the search 
  1) h(n)=α⋅h(n)+(1−α)⋅h(n) (alpha=1 at the start and than as we learn we make it less)


09.10.2024
- Trying to improve performance
  1) Mr Pevny have found library (SimpleChains.jl) that has faster Dense layers for small NN 
    (after adding it to the pipeline everything works much faster)


08.10.2024
- Trying to improve performance
  1) have found recursive rule x==y --> x - y == 0
  2) there is an option to get read of hash in profiler by precomputing it 
    before and save it in struct or have a faster hash specifically for Expr
  3) used vectors instead of matrices when embed
- Trying to improve heuristic learning 
  1) can add A* instead of greedy by adding depth 
- Problems
  -  large expr may expand in depth, populating search tree with useless nodes
    (happens because of expansion and assosiativity rules)


04.10.2024
- Trying to improve performance
  1) have implemented caching for rule matching
- Problems
  - performance is the main botleneck, large expr takes 1m to search


03.10.2024
- Trying to improve performance
- Problems
  - performance is the main botleneck, large expr takes 1m to search
  - caching drasticly reduces the allocations but still slow
  - pre allocation can be faster in some situations but takes lots of memmory


01.10.2024
- Trying to implement caching the subtrees
  1) when creating ProductNode structure for an expression,
    computing the embeddings of a substructeres 
- Problems
  - previous embeddings != to the caching embeddings


30.09.2024
- Disqused the ways to improve performance
  1) caching the subtrees embeddings of the expression
  2) Switch to A from greedy best first search
  3) greedy epsilon takes a lot of time get read of delete!
- Problems that occure
  - heuristic may learn suboptimal solution does not search for a better one
  - tree may expand in depth rather than in breadth


27.09.2024
- Disqused the ways to improve performance
  1) caching the subtrees embeddings of the expression
  2) expand multiple nodes at once
- Problems that occure
  - There is an issue with loss sometimes it becames infinit
  - Hard to know whether the epxression cant find solution or there is not enough rules provide
